@page "/register"
@using PeerReviewWebsite.Classes.Data.Login
@inject NavigationManager UriHelper
@inherits OwningComponentBase<UserService>

<h1>Registration Form</h1>
<head>
    <title>Register</title>
</head>

<body>
    <form action="">
        <div>
            <h2>Create a New Account</h2>
        </div>

        <div>
            <!-- First Name -->
            <input type="text" placeholder="First Name" id="firstname" @bind-value=@firstName />
            <br />
            <br />

            <!-- Last Name -->
            <input type="text" placeholder="Last Name" id="lastname" @bind-value=@lastName required />
            <br />
            <br />

            <!-- Username -->
            <input type="email" placeholder="Email" id="email" @bind-value=@email required />
            <br />
            <br />

            <!-- Password -->
            <input type="password" placeholder="Password" id="password" @bind-value=@password required />
            <br />
            <br />

            <!-- Confirm Password -->
            <input type="password" placeholder="Confirm Password" id="conpassword" @bind-value=@conPassword required />
            <br />
            <br />

            <!--Error Message: only appears when the password input does not match-->
            <label id="pswordlabel" for="password" hidden="@(!ShowMessage)">ERROR: Passwords didn't match</label>
            <br />
            <br />

            <button type="button" class="btn btn-primary" @onclick="RegisterUser">Create Account</button>
            <br />
            <p>Already have an account?  <NavLink class="nav-link" href="/">Login</NavLink></p>
        </div>
    </form>

    <!--Field that appears when passwords do not match [this isn't finished/implemented]-->
    <br>
    <form hidden id="errorForm">
        <br>
        <label id="pswordlabel" for="password">! Passwords didn't match</label>
        <br><br>
    </form>

</body>

@code {

    private string firstName = "";
    private string lastName = "";
    private string username = "";
    private string email = "";
    private string password = "";
    private string conPassword = "";
    bool ShowMessage { get; set; } = false;

    /// <summary>
    /// Checking that input is being properly grabbed
    /// </summary>
    private void PrintInput()
    {
        Console.WriteLine("First name entered was " + firstName);
        Console.WriteLine("Last name entered was " + lastName);
        Console.WriteLine("Username created " + username);
        Console.WriteLine("Email entered was " + email);
        Console.WriteLine("Password entered was " + password);
        Console.WriteLine("Confirm Password was " + conPassword);
    }

    /// <summary>
    /// Registers the user to the database
    /// </summary>
    private async Task RegisterUser() {
        if (!ConfirmPassword())
        {
            ShowMessage = true;
            return;
        }

        username = firstName + lastName;
        await Service.CreateUserAsync(new User
            {
                
                Username = username,
                Password = password
            });
        
        // Navigate to the new profile page
        ShowMessage = false;
        PrintInput();
        UriHelper.NavigateTo($"/profile/{username}");
    }

    /// <summary>
    /// Check that the Passowords match
    /// </summary>
    /// <returns>True if matching, false otherwise</returns>
    private bool ConfirmPassword()
    {
        if (String.Equals(password, conPassword)) {
            return true;
        } else {
            Console.WriteLine("Passwords did not match");
            return false;
        }
    }

}
