<ul>
    <li><a class=@HomeClass href="/home"<i class="bi-house-fill"></i>  Home</a></li>
    <li><a class=@ExploreClass href="/explore"<i class="bi-search"></i> Explore</a></li>
    <li><a class=@AuthorClass href="/author"<i class="bi-pencil-fill"></i> Author</a></li>
    <li><a class=@ReviewerClass href="/reviewer"<i class="bi-patch-check-fill"></i> Reviewer</a></li>
    @if (showModeratorPage) {
        <li><a class=@ModeratorClass href="/moderator"<i class="bi-chat-right-text-fill"></i> Moderator</a></li>
    }
    <li><a class=@ProfileClass href="/profile"<i class="bi-person-circle"></i> Profile</a></li>
    <li><a class=@LogOutClass href="/" <i class="bi-box-arrow-right"></i>  Log Out</a></li>
</ul>

@code {
    public enum Page {
        Home,
        Explore,
        Author,
        Reviewer,
        Moderator,
        Profile,
        LogOut
    }

    [Parameter]
    public Page activePage { get; set; }
    private string HomeClass => activePage == Page.Home ? "active" : "";
    private string ExploreClass => activePage == Page.Explore ? "active" : "";
    private string AuthorClass => activePage == Page.Author ? "active" : "";
    private string ReviewerClass => activePage == Page.Reviewer ? "active" : "";
    private string ModeratorClass => activePage == Page.Moderator ? "active" : "";
    private string ProfileClass => activePage == Page.Profile ? "active" : "";
    private string LogOutClass => activePage == Page.LogOut ? "active" : "";

    [Parameter]
    public bool showModeratorPage { get; set; }
    public bool showAuthorPage { get; set; }
    public bool showReviewerPage { get; set; }

    protected override async Task OnInitializedAsync() {
        
    }
}
